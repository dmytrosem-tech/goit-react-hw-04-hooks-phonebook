{"version":3,"sources":["Components/ContactForm/ContactForm.module.css","Components/ContactItem/ContactItem.module.css","Components/Filter/Filter.module.css","Components/ContactList/ContactList.module.css","Components/ContactForm/ContactForm.js","Components/Filter/Filter.js","Components/ContactItem/ContactItem.js","Components/ContactList/ContactList.js","App.js","index.js"],"names":["module","exports","ContactForm","addNewContact","contName","uuid","contNumber","useState","name","setName","number","setNumber","active","handleChangeAllInputs","e","target","value","console","warn","resetForm","className","styles","form","onSubmit","preventDefault","contactObj","id","form__label","htmlFor","form__input","type","pattern","title","required","onChange","placeholder","form__btn","disabled","Filter","filter","box","input","ContactItem","deleteContact","contacts__item","contact__name","contact__number","contacts__btn","onClick","ContactList","contacts","contacts__list","map","App","setContacts","setFilter","obj","some","alert","prevContacts","normalizedFilter","toLowerCase","contact","includes","getFilteredContacts","contactId","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.5b70d0ce.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"ContactForm_form__3MSj4\",\"form__label\":\"ContactForm_form__label__2gVQg\",\"form__input\":\"ContactForm_form__input__29fm0\",\"form__btn\":\"ContactForm_form__btn__1-dGZ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"contacts__item\":\"ContactItem_contacts__item__2onwM\",\"contact__name\":\"ContactItem_contact__name__3s743\",\"contact__number\":\"ContactItem_contact__number__1031x\",\"contacts__btn\":\"ContactItem_contacts__btn__PyA7O\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"box\":\"Filter_box__1TArh\",\"input\":\"Filter_input__kclW4\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"contacts__list\":\"ContactList_contacts__list__3TzRY\"};","import { useState } from \"react\";\nimport { v4 as uuid } from \"uuid\";\nimport styles from \"./ContactForm.module.css\";\n\nexport default function ContactForm({ addNewContact }) {\n  const contName = uuid();\n  const contNumber = uuid();\n\n  const [name, setName] = useState(\"\");\n  const [number, setNumber] = useState(\"\");\n  const [active, setActive] = useState(false);\n\n  const handleChangeAllInputs = (e) => {\n    const { name, value } = e.target;\n    switch (name) {\n      case \"name\":\n        setName(value);\n        break;\n      case \"number\":\n        setNumber(value);\n        break;\n      default:\n        console.warn(`Field - ${name} is under constraction`);\n    }\n  };\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    const contactObj = {\n      name,\n      number,\n      id: uuid(),\n    };\n    addNewContact(contactObj);\n    resetForm();\n  };\n\n  const resetForm = () => {\n    setName(\"\");\n    setNumber(\"\");\n  };\n\n  return (\n    <form className={styles.form} onSubmit={handleSubmit}>\n      <label className={styles.form__label} htmlFor={contName}>\n        Contacts name:\n      </label>\n      <input\n        className={styles.form__input}\n        type=\"text\"\n        id={contName}\n        name=\"name\"\n        value={name}\n        pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n        title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n        required\n        onChange={handleChangeAllInputs}\n        placeholder=\"Will Smith\"\n      />\n      <label className={styles.form__label} htmlFor={contNumber}>\n        Contacts number:\n      </label>\n      <input\n        className={styles.form__input}\n        type=\"tel\"\n        id={contNumber}\n        name=\"number\"\n        value={number}\n        pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n        title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\n        required\n        onChange={handleChangeAllInputs}\n        placeholder=\"(097) 222-33-222\"\n      />\n      <button className={styles.form__btn} type=\"submit\" disabled={active}>\n        Add contact\n      </button>\n    </form>\n  );\n}\n","import styles from \"./Filter.module.css\";\n\nexport default function Filter({ filter, onChange }) {\n  const { box, input } = styles;\n  return (\n    <div className={box}>\n      {\" \"}\n      Find contacts by name:\n      <input\n        className={input}\n        type=\"text\"\n        name=\"filter\"\n        value={filter}\n        onChange={onChange}\n      />\n    </div>\n  );\n}\n","import styles from \"./ContactItem.module.css\";\nexport default function ContactItem({ name, number, deleteContact, id }) {\n  const { contacts__item, contact__name, contact__number, contacts__btn } =\n    styles;\n  return (\n    <li id={id} className={contacts__item}>\n      <p className={contact__name}>{name}</p>\n      <p className={contact__number}>tel: {number}</p>\n      <button onClick={() => deleteContact(id)} className={contacts__btn}>\n        Delete contact\n      </button>\n    </li>\n  );\n}\n","import React from \"react\";\nimport ContactItem from \"../ContactItem\";\nimport styles from \"./ContactList.module.css\";\n\nfunction ContactList({ contacts, deleteContact }) {\n  return (\n    <ul className={styles.contacts__list}>\n      {contacts.map(({ name, number, id }) => (\n        <ContactItem\n          name={name}\n          number={number}\n          id={id}\n          deleteContact={deleteContact}\n        />\n      ))}\n    </ul>\n  );\n}\n\nexport default ContactList;\n","import { useState } from \"react\";\nimport ContactForm from \"./Components/ContactForm\";\nimport Filter from \"./Components/Filter\";\nimport ContactList from \"./Components/ContactList\";\n\nexport default function App() {\n  const [contacts, setContacts] = useState([]);\n  const [filter, setFilter] = useState(\"\");\n\n  const addNewContact = (obj) => {\n    const { name } = obj;\n    if (contacts.some(({ name }) => name === obj.name)) {\n      alert(`Sorry, ${name} is already in contacts list`);\n      return;\n    }\n    setContacts((prevContacts) => [obj, ...prevContacts]);\n  };\n\n  const deleteContact = (contactId) => {\n    setContacts(contacts.filter((contact) => contact.id !== contactId));\n  };\n  const changeFilter = (e) => {\n    setFilter(e.target.value);\n  };\n\n  const getFilteredContacts = () => {\n    const normalizedFilter = filter.toLowerCase();\n    return contacts.filter((contact) =>\n      contact.name.toLowerCase().includes(normalizedFilter)\n    );\n  };\n\n  return (\n    <div>\n      <h1>Phonebook</h1>\n      <ContactForm addNewContact={addNewContact} />\n      <h2>Contacts</h2>\n      <Filter filter={filter} onChange={changeFilter} />\n      <ContactList\n        contacts={getFilteredContacts()}\n        deleteContact={deleteContact}\n      />\n    </div>\n  );\n}\n\n// export default class App extends Component {\n//   state = {\n//     contacts: [],\n//     filter: \"\",\n//   };\n\n//   addNewContact = (obj) => {\n//     const { contacts } = this.state;\n//     const { name } = obj;\n//     if (contacts.some(({ name }) => name === obj.name)) {\n//       alert(`Sorry, ${name} is already in contacts list`);\n//       return;\n//     }\n//     this.setState(({ contacts }) => {\n//       return {\n//         contacts: [obj, ...contacts],\n//       };\n//     });\n//   };\n\n//   deleteContact = (contactId) => {\n//     this.setState((prev) => ({\n//       contacts: prev.contacts.filter((contact) => contact.id !== contactId),\n//     }));\n//   };\n\n//   changeFilter = (e) => {\n//     this.setState({ filter: e.target.value });\n//   };\n\n//   getFilteredContacts = () => {\n//     const { contacts, filter } = this.state;\n//     const normalizedFilter = filter.toLowerCase();\n\n//     return contacts.filter((contact) =>\n//       contact.name.toLowerCase().includes(normalizedFilter)\n//     );\n//   };\n\n//   componentDidMount() {\n//     const contacts = localStorage.getItem(\"contacts\");\n//     const parsedContacts = JSON.parse(contacts);\n\n//     if (parsedContacts) {\n//       this.setState({ contacts: parsedContacts });\n//     }\n//   }\n\n//   componentDidUpdate(prevProps, prevState) {\n//     if (this.state.contacts !== prevState.contacts) {\n//       localStorage.setItem(\"contacts\", JSON.stringify(this.state.contacts));\n//     }\n//   }\n\n//   render() {\n//     const { addNewContact, deleteContact, changeFilter } = this;\n//     const visibleContacts = this.getFilteredContacts();\n//     const { filter } = this.state;\n//     return (\n//       <div>\n//         <h1>Phonebook</h1>\n//         <ContactForm addNewContact={addNewContact} />\n//         <h2>Contacts</h2>\n//         <Filter filter={filter} onChange={changeFilter} />\n//         <ContactList contacts={visibleContacts} deleteContact={deleteContact} />\n//       </div>\n//     );\n//   }\n// }\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport \"modern-normalize/modern-normalize.css\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}